@use "sass:meta";
/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/vue/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/vue/css/normalize.css";
@import "@ionic/vue/css/structure.css";
@import "@ionic/vue/css/typography.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/vue/css/padding.css";
@import "@ionic/vue/css/float-elements.css";
@import "@ionic/vue/css/text-alignment.css";
@import "@ionic/vue/css/text-transformation.css";
@import "@ionic/vue/css/flex-utils.css";
@import "@ionic/vue/css/display.css";

/* Custom fonts */
@include meta.load-css("_fonts.scss");

/* Custom colors */
@include meta.load-css("_colors.scss");

/* Custom utilities */
@include meta.load-css("_utils.scss");

/* Global styles */
:root {
  --ion-font-family: 'Inria Sans', sans-serif;
}

.logo {
  display: flex;
  align-items: center;
  padding: 10px;
  
  .epoc-logo {
    background-image: url('../assets/img/ePoc.svg');
    background-size: contain;
    background-repeat: no-repeat;
    width: 80px;
    height: 30px;
  }
  
  .by-inria {
    background-image: url('../assets/img/ePoc-by-Inria-seul.svg');
    background-size: contain;
    background-repeat: no-repeat;
    width: 60px;
    height: 20px;
    margin-left: 5px;
  }
}

.icon-btn {
  --padding-start: 8px;
  --padding-end: 8px;
  margin: 0;
}

.library-items {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
  gap: 16px;
  padding: 16px;
  
  @media (min-width: 768px) {
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  }
}

.library-item {
  display: flex;
  flex-direction: column;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  background-color: var(--ion-background-color);
  
  &-image {
    height: 120px;
    background-size: cover;
    background-position: center;
    background-color: #f5f5f5;
  }
  
  &-title {
    padding: 8px;
    margin: 0;
    font-size: 14px;
    font-weight: 600;
    text-align: center;
    min-height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  &-toolbar {
    display: flex;
    padding: 8px;
    
    .expanded {
      flex: 1;
      margin: 0;
      --border-radius: 4px;
      font-size: 12px;
      height: 36px;
    }
    
    .round {
      width: 36px;
      height: 36px;
      --padding-start: 0;
      --padding-end: 0;
      --border-radius: 4px;
      margin: 0 0 0 8px;
      
      &.update-available::after {
        content: '';
        position: absolute;
        top: 4px;
        right: 4px;
        width: 8px;
        height: 8px;
        background-color: var(--ion-color-danger);
        border-radius: 50%;
      }
    }
  }
  
  &-add {
    .library-item-image {
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: var(--ion-color-light);
      
      ion-icon {
        font-size: 48px;
        color: var(--ion-color-medium);
      }
    }
  }
}

.library-separator {
  position: relative;
  text-align: center;
  margin: 24px 16px 8px;
  
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 1px;
    background-color: var(--ion-color-light);
    z-index: 0;
  }
  
  span {
    position: relative;
    background-color: var(--ion-background-color);
    padding: 0 16px;
    font-size: 14px;
    font-weight: 600;
    color: var(--ion-color-medium);
    z-index: 1;
  }
}

.onboarding {
  margin: 16px;
  border-radius: 8px;
  overflow: hidden;
  
  &-item {
    background-color: var(--ion-color-light);
    padding: 16px;
    border-radius: 8px;
    position: relative;
    
    &.with-image {
      padding-left: 120px;
      min-height: 100px;
    }
    
    &-image {
      position: absolute;
      left: 0;
      top: 0;
      width: 100px;
      height: 100%;
      background-size: cover;
      background-position: center;
    }
    
    &-title {
      font-weight: 600;
      margin-bottom: 8px;
    }
    
    &-text {
      font-size: 14px;
      color: var(--ion-color-medium);
    }
    
    &-close {
      position: absolute;
      top: 8px;
      right: 8px;
      width: 24px;
      height: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
      background-color: rgba(0, 0, 0, 0.1);
      
      ion-icon {
        font-size: 16px;
        color: var(--ion-color-medium);
      }
    }
  }
}

.spin {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.custom-action-sheet {
  --button-color: var(--ion-color-dark);
  
  .action-sheet-button {
    display: flex;
    align-items: center;
    
    ion-icon {
      margin-right: 16px;
    }
  }
}

.ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.base-btn {
  color: var(--ion-color-inria-base-button-contrast);
}
